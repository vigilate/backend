from vulnerability_manager.models import Cwe
from vulnerability_manager import cwe_xml_parser
import requests
import zipfile
import os
import io

class MitreCweXmlUpdater():

    def __init__(self):
        self.path = os.path.dirname(os.path.realpath(__file__)) + "/nvd_db/"


    def update(self):
        base_url = "https://cwe.mitre.org/data/xml/"
        file_name = "cwec_v2.9.xml"
        url = base_url + file_name + ".zip"

        req = requests.get(url)
        zip_obj = zipfile.ZipFile(io.BytesIO(req.content))
        zip_file = zip_obj.open(file_name)
        open(self.path + file_name, "wb").write(zip_file.read())

        self.parse_xml(self.path + file_name)

    def parse_xml(self, filepath):
        parser = cwe_xml_parser.CweXmlParser()
        parser.parse("vulnerability_manager/nvd_db/cwec_v2.9.xml")
        self.createOrUpdateCweList(parser.cwe_list)

    def createOrUpdateCweList(self, cwe_list):

        to_bulk_cwe = []
        for cwe in cwe_list:
            try:
                update_cwe = Cwe.objects.get(cweid=cwe["cweid"])
                changed = []
                for key in cwe:
                    if cwe[key] != getattr(update_cwe, key):
                        getattr(update_cwe, key, cwe[key])
                        changed.append(key)
                if changed:
                    update_cwe.save(update_fields=changed)
                
            except Cwe.DoesNotExist:
                to_bulk_cwe.append(Cwe(**{key:cwe[key] for key in cwe}))

        Cwe.objects.bulk_create(to_bulk_cwe)
                
        
        
