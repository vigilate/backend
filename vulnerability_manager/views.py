from django.shortcuts import render
from django.http import HttpResponse, HttpResponseServerError
from vulnerability_manager.models import Cpe
from vulnerability_manager import cpe_updater
from vulnerability_manager.nvd_cve_xml_updater import NvdCveXmlUpdater
import requests

def update_cpe(request):

    # limiting this view to a localhost
    x_forwarded_for = request.META.get('HTTP_X_FORWARDED_FOR')
    if x_forwarded_for:
        ip = x_forwarded_for.split(',')[0]
    else:
        ip = request.META.get('REMOTE_ADDR')
    if ip != "127.0.0.1":
        return HttpResponse(status=401)

    try:
        cpes = cpe_updater.do_update()
    except requests.RequestException as e:
        return HttpResponseServerError()
    cpe_to_save = []

    for cpe in cpes:
        # cpe already exist
        if Cpe.objects.filter(cpe = cpe).exists():
            continue
        parts = cpe.split(':')
        if parts[1] == '/h':
            continue
        new_cpe = Cpe(cpe=cpe, vendor=parts[2], product=parts[3], version = parts[4])
        cpe_to_save.append(new_cpe)
    Cpe.objects.bulk_create(cpe_to_save)
    return HttpResponse(status=200)

def update_cve(request):
    updater = NvdCveXmlUpdater()
    nb_created,nb_updated = updater.update_year(2016)
    return HttpResponse("nb_created:%d ; nb_updated:%d" % (nb_created,nb_updated), status=200)
